"""add_dataset_location_and_time_fields

Revision ID: 3461ec7e5869
Revises: 1980940df6d4
Create Date: 2025-06-12 14:53:23.021381

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '3461ec7e5869'
down_revision: Union[str, None] = '1980940df6d4'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('admin_audit', 'target_type',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.String(length=20),
               existing_nullable=False)
    op.alter_column('admin_audit', 'action_details',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               type_=sa.Text(),
               existing_nullable=True)
    op.drop_index('idx_admin_audit_action_type', table_name='admin_audit')
    op.drop_index('idx_admin_audit_timestamp', table_name='admin_audit')
    op.add_column('dataset', sa.Column('geographic_location', sa.Text(), nullable=True))
    op.add_column('dataset', sa.Column('data_time_period', sa.String(length=100), nullable=True))
    op.drop_index('idx_dataset_approval_status', table_name='dataset')
    op.drop_index('idx_user_downloads_dataset_id', table_name='user_downloads')
    op.drop_index('idx_user_downloads_date', table_name='user_downloads')
    op.drop_index('idx_user_downloads_user_id', table_name='user_downloads')
    op.alter_column('users', 'privacy_level',
               existing_type=sa.VARCHAR(length=20),
               nullable=True,
               existing_server_default=sa.text("'public'::character varying"))
    op.alter_column('users', 'profile_completion_percentage',
               existing_type=sa.INTEGER(),
               nullable=True,
               existing_server_default=sa.text('0'))
    op.drop_index('idx_users_contact_info_gin', table_name='users', postgresql_using='gin')
    op.drop_index('idx_users_privacy_level', table_name='users')
    op.drop_index('idx_users_projects_gin', table_name='users', postgresql_using='gin')
    op.drop_index('idx_users_skills_gin', table_name='users', postgresql_using='gin')
    op.drop_index('idx_users_status', table_name='users')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_index('idx_users_status', 'users', ['status'], unique=False)
    op.create_index('idx_users_skills_gin', 'users', ['skills'], unique=False, postgresql_using='gin')
    op.create_index('idx_users_projects_gin', 'users', ['projects'], unique=False, postgresql_using='gin')
    op.create_index('idx_users_privacy_level', 'users', ['privacy_level'], unique=False)
    op.create_index('idx_users_contact_info_gin', 'users', ['contact_info'], unique=False, postgresql_using='gin')
    op.alter_column('users', 'profile_completion_percentage',
               existing_type=sa.INTEGER(),
               nullable=False,
               existing_server_default=sa.text('0'))
    op.alter_column('users', 'privacy_level',
               existing_type=sa.VARCHAR(length=20),
               nullable=False,
               existing_server_default=sa.text("'public'::character varying"))
    op.create_index('idx_user_downloads_user_id', 'user_downloads', ['user_id'], unique=False)
    op.create_index('idx_user_downloads_date', 'user_downloads', ['first_download_date'], unique=False)
    op.create_index('idx_user_downloads_dataset_id', 'user_downloads', ['dataset_id'], unique=False)
    op.create_index('idx_dataset_approval_status', 'dataset', ['approval_status'], unique=False)
    op.drop_column('dataset', 'data_time_period')
    op.drop_column('dataset', 'geographic_location')
    op.create_index('idx_admin_audit_timestamp', 'admin_audit', ['timestamp'], unique=False)
    op.create_index('idx_admin_audit_action_type', 'admin_audit', ['action_type'], unique=False)
    op.alter_column('admin_audit', 'action_details',
               existing_type=sa.Text(),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=True)
    op.alter_column('admin_audit', 'target_type',
               existing_type=sa.String(length=20),
               type_=sa.VARCHAR(length=50),
               existing_nullable=False)
    # ### end Alembic commands ###
